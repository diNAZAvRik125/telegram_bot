import telebot
from telebot import types
import os
import logging
from dotenv import load_dotenv
from data_base import DataBaseWorker


dotenv_path = os.path.join(os.path.dirname(__file__), 'token.env')
if os.path.exists(dotenv_path):
    load_dotenv(dotenv_path)

BOT_TOKEN = os.getenv("TOKEN")


bot = telebot.TeleBot(BOT_TOKEN)
db = DataBaseWorker('database.db')
logging.basicConfig(level=logging.INFO)


def welcome(bot):
    def welcom_message(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        farther = types.KeyboardButton('/–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        markup.add(farther)
        bot.send_message(chat_id=message.chat.id,
                         text= '<b>–ü—Ä–∏–≤–µ—Ç! \n</b>'
                         '–≠—Ç–æ –º–æ–π –ø—Ä–æ–µ–∫—Ç –ø–æ –ü–∏—Ç–æ–Ω\n'
                         '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–æ–±–∏—Å–µ–¥–Ω–∏–∫–æ–≤ –∏ –ø–æ–≥–≤–æ—Ä–∏—Ç—å —Å –Ω–∏–º–∏ –æ:\n'
                         '-–∂–∏–∑–Ω–∏ üëÄ\n'
                         '-—Ä–∞–±–æ—Ç–µ üíº\n'
                         '–ª—é–±–≤–∏ ‚ù§Ô∏è', parse_mode='html', reply_markup=markup)
    return welcom_message


def registration(bot):
    def input_reson(message):
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É:')
        reason = message.text
        db.add_user(message.from_user.id, message.from_user.username, reason)
    return input_reson


def menu(bot):
    def welcom_menu(message):
        markup = types.ReplyKeyboardMarkup()
        update = types.KeyboardButton('/–û–±–Ω–æ–≤–∏—Ç—å–ê–Ω–∫–µ—Ç—É')
        delete = types.KeyboardButton('/–£–¥–∞–ª–∏—Ç—å–ê–Ω–∫–µ—Ç—É')
        find = types.KeyboardButton('/–ù–∞–π—Ç–∏–°–æ–±–∏—Å–µ–¥–Ω–∏–∫–∞')
        markup.add(update, delete, find)
        bot.send_message(chat_id=message.chat.id,text="",reply_markup=markup)


def update_questionnaire(bot):
    def up(message):
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –ø—Ä–∏—á–∏–Ω—É:')
        old_reason = db.get_info_user(message.from_user.id)
        db.update_user_reason(old_reason, message.text)


def delete_quastionnaire(bot):
    def dlt(message):
        db.delete_user(message.from_user.id)
        bot.send_message(message.chat.id, "–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞")


def find_users(bot):
    def fnd(message):
        data = []
        data = db.find_user(db.get_info_user(message.from_user.id))
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        menu = types.KeyboardButton('/–ú–µ–Ω—é')
        markup.add(menu)
        for mass in data:
            bot.send_message(message.chat.id,mass[1], "/n", mass[2], "/n", reply_markup=markup)



def main():
    bot.message_handler(commands=['start'])(welcome(bot))
    bot.message_handler(commands=['–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'])(registration(bot))
    bot.message_handler(content_types=['text'])(menu(bot))
    bot.message_handler(commands=['–û–±–Ω–æ–≤–∏—Ç—å–ê–Ω–∫–µ—Ç—É'])(update_questionnaire(bot))
    bot.message_handler(commands=['–£–¥–∞–ª–∏—Ç—å–ê–Ω–∫–µ—Ç—É'])(delete_quastionnaire(bot))
    bot.message_handler(commands=['–ù–∞–π—Ç–∏–°–æ–±–∏—Å–µ–¥–Ω–∏–∫–∞'])(find_users(bot))
    bot.polling(none_stop=True)

if __name__ == '__main__':
    main()


