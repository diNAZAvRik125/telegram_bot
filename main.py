import telebot
from telebot import types
import data_base


bot = telebot.TeleBot('5327302561:AAHjQZlfukSKDIEl72zNUQJifiabcvk_Wyc')


@bot.message_handler(commands=['start', 'help'])
def start(message):
  markup = types.ReplyKeyboardMarkup()
  next = types.KeyboardButton('next')
  markup.add(next)
  bot.send_message(message.chat.id,'<b>–ü—Ä–∏–≤–µ—Ç! \n</b>'
                   '–≠—Ç–æ –º–æ–π –ø—Ä–æ–µ–∫—Ç –ø–æ –ü–∏—Ç–æ–Ω\n'
                   '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–æ–±–∏—Å–Ω–µ–¥–Ω–∏–∫–æ–≤ –∏ –ø–æ–≥–≤–æ—Ä–∏—Ç—å —Å –Ω–∏–º–∏ –æ\n'
                   '-–∂–∏–∑–Ω–∏ üëÄ\n'
                   '-—Ä–∞–±–æ—Ç–µ üíº\n'
                   '–ª—é–±–≤–∏ ‚ù§Ô∏è', parse_mode = 'html', reply_markup=markup)


@bot.message_handler(commands=['next'])
async def registration(message):
    bot.send_message(message.chat.id, '<b>–ø—Ä–∏–¥–µ—Ç—Å—è –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è \n</b>', parse_mode='html')
    markup = types.ReplyKeyboardMarkup()
    name = types.KeyboardButton('–ò–º—è')
    prichina = types.KeyboardButton('–ü—Ä–∏—á–∏–Ω–∞')
    markup.add(name, start)
    bot.send_message(message.chat.id, '–ö–†–Ø', reply_markup=markup)
    data = [2]
    if message == '–ò–º—è':
        data[0] = message
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–∏–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É')
        data[1] = message
    else:
        data[1] = message
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–∏–¥–∏—Ç–µ –∏–º—è')
        data[0] = message
    menu(message)


@bot.message_handler(commands=['–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É'])
def update_blank(message):
    markup = types.ReplyKeyboardMarkup()
    name = types.KeyboardButton('–ò–º—è')
    prichina = types.KeyboardButton('–ü—Ä–∏—á–∏–Ω–∞')
    cancellation = types.KeyboardButton('–û—Ç–º–µ–Ω–∞')
    markup.add(name, start, cancellation)
    bot.send_message(message.chat.id, '–ö–†–Ø', reply_markup=markup)
    data = [2]
    if message == '–ò–º—è':
        data[0] = message
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–∏–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É')
        data[1] = message
    elif message == '–ü—Ä–∏—á–∏–Ω–∞':
        data[1] = message
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–∏–¥–∏—Ç–µ –∏–º—è')
        data[0] = message
    else:
        markup = types.ReplyKeyboardMarkup()
        next = types.KeyboardButton('next')
        markup.add(next)
        bot.send_message(message.chat.id, '–ö–†–Ø', reply_markup=markup)


@bot.message_handler(commands=['—É–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É'])
def update_blank(message):
    data_base.delete_user(message.from_user.id)


@bot.message_handler(commands=['–Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞'])
def find(message):
    markup = types.ReplyKeyboardMarkup()
    next_user = types.KeyboardButton('next_user')
    back = types.KeyboardButton('back')
    markup.add(next, back)
    row = data_base.next_user(data_base.get_info_user(message.from_user.id)[2])
    bot.send_message(message.chat.id, row, reply_markup=markup)


@bot.message_handler(commands=['back'])
def menu(message):
    markup = types.ReplyKeyboardMarkup()
    update = types.KeyboardButton('–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É')
    find = types.KeyboardButton('–Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    delete = types.KeyboardButton('—É–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É')
    markup.add(update,find,delete)
    bot.send_message(message.chat.id, '–ú–µ–Ω—é', reply_markup=markup)


bot.polling(none_stop=True)